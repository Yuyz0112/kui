{
  "application": {
    "version": "sunmao/v1",
    "kind": "Application",
    "metadata": {
      "name": "kui"
    },
    "spec": {
      "components": [
        {
          "id": "root",
          "type": "kui/v1/root",
          "properties": {},
          "traits": []
        },
        {
          "id": "stack4",
          "type": "core/v1/stack",
          "properties": {
            "spacing": 12,
            "direction": "vertical",
            "align": "auto",
            "wrap": "",
            "justify": ""
          },
          "traits": [
            {
              "type": "core/v1/slot",
              "properties": {
                "container": {
                  "id": "root",
                  "slot": "root"
                }
              }
            },
            {
              "type": "core/v1/style",
              "properties": {
                "styles": [
                  {
                    "styleSlot": "content",
                    "style": "width: 100%;"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": "stack5",
          "type": "core/v1/stack",
          "properties": {
            "spacing": 12,
            "direction": "horizontal",
            "align": "auto",
            "wrap": "",
            "justify": ""
          },
          "traits": [
            {
              "type": "core/v1/slot",
              "properties": {
                "container": {
                  "id": "stack4",
                  "slot": "content"
                }
              }
            },
            {
              "type": "core/v1/style",
              "properties": {
                "styles": [
                  {
                    "styleSlot": "content",
                    "style": "width: 650px;\nmargin: 0 auto;"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": "unstructured_form4",
          "type": "kui/v1/unstructured_form",
          "properties": {
            "spec": "{{\n{\n  description:\n    \"KubeSmartClusterSpec defines the desired state of KubeSmartCluster.\",\n  type: \"object\",\n  properties: {\n    cloudProvider: {\n      type: \"object\",\n      required: [\"name\"],\n      properties: {\n        cloudtower: {\n          type: \"object\",\n          properties: {\n            elfCluster: {\n              title:\n                \"集群\",\n              type: \"string\",\n            },\n            elfVlan: {\n              description:\n                \"ElfVlan is the VLAN id in the CloudTower server.\",\n              type: \"string\",\n            },\n            elfVmTemplate: {\n              description:\n                \"ElfVMTemplate is id of VM template from which the VMs are cloned.\",\n              type: \"string\",\n            },\n          },\n        },\n        name: {\n          description:\n            \"Name is the name of the cloud provider used for this cluster. It can be cloudtower, vsphere, etc.\",\n          type: \"string\",\n          enum: [\"cloudtower\", \"vsphere\"],\n        },\n      },\n    },\n    clusterNetwork: {\n      description:\n        \"ClusterNetwork specifies the general network configuration for the cluster.\",\n      type: \"object\",\n      properties: {\n        apiServerPort: {\n          description:\n            \"APIServerPort specifies the port the API Server should bind to. Defaults to 6443.\",\n          type: \"integer\",\n          format: \"int32\",\n        },\n        pods: {\n          description:\n            \"The network ranges from which Pod networks are allocated.\",\n          type: \"object\",\n          required: [\"cidrBlocks\"],\n          properties: {\n            cidrBlocks: {\n              type: \"array\",\n              items: { type: \"string\" },\n            },\n          },\n        },\n        serviceDomain: {\n          description: \"Domain name for services.\",\n          type: \"string\",\n        },\n        services: {\n          description:\n            \"The network ranges from which service VIPs are allocated.\",\n          type: \"object\",\n          required: [\"cidrBlocks\"],\n          properties: {\n            cidrBlocks: {\n              type: \"array\",\n              items: { type: \"string\" },\n            },\n          },\n        },\n      },\n    },\n    cni: {\n      description: \"CNI specifies CNI configuration.\",\n      type: \"object\",\n      properties: {\n        name: {\n          description:\n            \"Name is the CNI name, e.g. calico, everoute, etc.\",\n          type: \"string\",\n          enum: [\"calico\", \"everoute\"],\n        },\n        version: {\n          description: \"Version is the CNI version.\",\n          type: \"string\",\n        },\n      },\n    },\n    controlPlaneEndpoint: {\n      description:\n        \"ControlPlaneEndpoint specifies the endpoint used to communicate with the control plane.\",\n      type: \"object\",\n      required: [\"host\", \"port\"],\n      properties: {\n        host: {\n          description:\n            \"The hostname on which the API server is serving.\",\n          type: \"string\",\n        },\n        port: {\n          description: \"The port on which the API server is serving.\",\n          type: \"integer\",\n          format: \"int32\",\n        },\n      },\n    },\n    topology: {\n      description: \"Topology defines the node groups for the cluster.\",\n      type: \"object\",\n      properties: {\n        controlPlane: {\n          description:\n            \"ControlPlaneGroup is the node group for ControlPlane nodes.\",\n          type: \"object\",\n          properties: {\n            name: {\n              description: \"Name is the name of this node group.\",\n              type: \"string\",\n            },\n            nodeConfig: {\n              description:\n                \"NodeConfig specifies the configuration for control plane nodes, such as cpu/memory/disk, etc.\",\n              type: \"object\",\n              properties: {\n                cloneMode: {\n                  description:\n                    \"CloneMode is the clone type of the node.\",\n                  type: \"string\",\n                },\n                cpuCores: {\n                  description:\n                    \"CPUCores is the number of cpu cores of the node.\",\n                  type: \"integer\",\n                  format: \"int32\",\n                },\n                diskSizeGB: {\n                  description:\n                    \"DiskSizeGB is the system disk size of the node.\",\n                  type: \"integer\",\n                  format: \"int32\",\n                },\n                memoryMB: {\n                  description:\n                    \"MemoryMB is the memory size of the node.\",\n                  type: \"integer\",\n                  format: \"int32\",\n                },\n                network: {\n                  description:\n                    \"Network is the network configuration of the node.\",\n                  type: \"object\",\n                  required: [\"devices\"],\n                  properties: {\n                    devices: {\n                      description:\n                        \"Devices is the list of network devices used by the virtual machine.\",\n                      type: \"array\",\n                      items: {\n                        description:\n                          \"NetworkDeviceSpec defines the network configuration for a virtual machine's network device.\",\n                        type: \"object\",\n                        required: [\"networkIndex\", \"networkType\"],\n                        properties: {\n                          ipAddrs: {\n                            description:\n                              \"IPAddrs is a list of one or more IPv4 and/or IPv6 addresses to assign to this device. Required when DHCP4 and DHCP6 are both false.\",\n                            type: \"array\",\n                            items: { type: \"string\" },\n                          },\n                          macAddr: {\n                            description:\n                              \"MACAddr is the MAC address used by this device. It is generally a good idea to omit this field and allow a MAC address to be generated.\",\n                            type: \"string\",\n                          },\n                          netmask: {\n                            description:\n                              \"Netmask is the subnet mask used by this device. Required when DHCP4 is false.\",\n                            type: \"string\",\n                          },\n                          networkIndex: { type: \"integer\" },\n                          networkType: { type: \"string\" },\n                          routes: {\n                            description:\n                              \"Required when DHCP4 is false.\",\n                            type: \"array\",\n                            items: {\n                              description:\n                                \"NetworkDeviceRouteSpec defines the network configuration for a virtual machine's network device route.\",\n                              type: \"object\",\n                              properties: {\n                                gateway: {\n                                  description:\n                                    \"Gateway is the IPv4 gateway used by this route.\",\n                                  type: \"string\",\n                                },\n                                netmask: {\n                                  description:\n                                    \"Netmask is the subnet mask used by this route.\",\n                                  type: \"string\",\n                                },\n                                network: {\n                                  description:\n                                    \"Network is the route network address.\",\n                                  type: \"string\",\n                                },\n                              },\n                            },\n                          },\n                          vlan: {\n                            description:\n                              \"Vlan is the virtual LAN used by the virtual machine.\",\n                            type: \"string\",\n                          },\n                        },\n                      },\n                    },\n                    preferredAPIServerCidr: {\n                      description:\n                        \"PreferredAPIServeCIDR is the preferred CIDR for the Kubernetes API server endpoint on this machine\",\n                      type: \"string\",\n                    },\n                  },\n                },\n                vmTemplate: {\n                  description:\n                    \"VMTemplate is id of VM template from which the VMs are cloned.\",\n                  type: \"string\",\n                },\n              },\n            },\n            replicas: {\n              description:\n                \"Replicas is the number of nodes in this node group.\",\n              type: \"integer\",\n              format: \"int32\",\n            },\n          },\n        },\n        workers: {\n          description:\n            \"WorkerGroups are the node groups for Worker nodes.\",\n          type: \"array\",\n          items: {\n            description:\n              \"WorkerGroup defines the K8s Worker node group.\",\n            type: \"object\",\n            properties: {\n              name: {\n                description: \"Name is the name of this node group.\",\n                type: \"string\",\n              },\n              nodeConfig: {\n                description:\n                  \"NodeConfig specifies the configuration for control plane nodes, such as cpu/memory/disk, etc.\",\n                type: \"object\",\n                properties: {\n                  cloneMode: {\n                    description:\n                      \"CloneMode is the clone type of the node.\",\n                    type: \"string\",\n                  },\n                  cpuCores: {\n                    description:\n                      \"CPUCores is the number of cpu cores of the node.\",\n                    type: \"integer\",\n                    format: \"int32\",\n                  },\n                  diskSizeGB: {\n                    description:\n                      \"DiskSizeGB is the system disk size of the node.\",\n                    type: \"integer\",\n                    format: \"int32\",\n                  },\n                  memoryMB: {\n                    description:\n                      \"MemoryMB is the memory size of the node.\",\n                    type: \"integer\",\n                    format: \"int32\",\n                  },\n                  network: {\n                    description:\n                      \"Network is the network configuration of the node.\",\n                    type: \"object\",\n                    required: [\"devices\"],\n                    properties: {\n                      devices: {\n                        description:\n                          \"Devices is the list of network devices used by the virtual machine.\",\n                        type: \"array\",\n                        items: {\n                          description:\n                            \"NetworkDeviceSpec defines the network configuration for a virtual machine's network device.\",\n                          type: \"object\",\n                          required: [\"networkIndex\", \"networkType\"],\n                          properties: {\n                            ipAddrs: {\n                              description:\n                                \"IPAddrs is a list of one or more IPv4 and/or IPv6 addresses to assign to this device. Required when DHCP4 and DHCP6 are both false.\",\n                              type: \"array\",\n                              items: { type: \"string\" },\n                            },\n                            macAddr: {\n                              description:\n                                \"MACAddr is the MAC address used by this device. It is generally a good idea to omit this field and allow a MAC address to be generated.\",\n                              type: \"string\",\n                            },\n                            netmask: {\n                              description:\n                                \"Netmask is the subnet mask used by this device. Required when DHCP4 is false.\",\n                              type: \"string\",\n                            },\n                            networkIndex: { type: \"integer\" },\n                            networkType: { type: \"string\" },\n                            routes: {\n                              description:\n                                \"Required when DHCP4 is false.\",\n                              type: \"array\",\n                              items: {\n                                description:\n                                  \"NetworkDeviceRouteSpec defines the network configuration for a virtual machine's network device route.\",\n                                type: \"object\",\n                                properties: {\n                                  gateway: {\n                                    description:\n                                      \"Gateway is the IPv4 gateway used by this route.\",\n                                    type: \"string\",\n                                  },\n                                  netmask: {\n                                    description:\n                                      \"Netmask is the subnet mask used by this route.\",\n                                    type: \"string\",\n                                  },\n                                  network: {\n                                    description:\n                                      \"Network is the route network address.\",\n                                    type: \"string\",\n                                  },\n                                },\n                              },\n                            },\n                            vlan: {\n                              description:\n                                \"Vlan is the virtual LAN used by the virtual machine.\",\n                              type: \"string\",\n                            },\n                          },\n                        },\n                      },\n                      preferredAPIServerCidr: {\n                        description:\n                          \"PreferredAPIServeCIDR is the preferred CIDR for the Kubernetes API server endpoint on this machine\",\n                        type: \"string\",\n                      },\n                    },\n                  },\n                  vmTemplate: {\n                    description:\n                      \"VMTemplate is id of VM template from which the VMs are cloned.\",\n                    type: \"string\",\n                  },\n                },\n              },\n              replicas: {\n                description:\n                  \"Replicas is the number of nodes in this node group.\",\n                type: \"integer\",\n                format: \"int32\",\n              },\n            },\n          },\n        },\n      },\n    },\n    version: {\n      description: \"Version specifies the K8s version for the cluster.\",\n      type: \"string\",\n    },\n  },\n}\n}}",
            "defaultValue": {}
          },
          "traits": [
            {
              "type": "core/v1/slot",
              "properties": {
                "container": {
                  "id": "stack5",
                  "slot": "content"
                }
              }
            }
          ]
        },
        {
          "id": "unstructured_sidebar3",
          "type": "kui/v1/unstructured_sidebar",
          "properties": {
            "item": "{{ unstructured_table3.activeItem }}",
            "defaultVisible": false
          },
          "traits": [
            {
              "type": "core/v1/slot",
              "properties": {
                "container": {
                  "id": "stack4",
                  "slot": "content"
                }
              }
            },
            {
              "type": "core/v1/event",
              "properties": {
                "handlers": []
              }
            }
          ]
        },
        {
          "id": "unstructured_table3",
          "type": "kui/v1/unstructured_table",
          "properties": {
            "kind": "Deployment",
            "apiBase": "/apis/apps/v1/deployments",
            "columns": [
              {
                "key": "name",
                "title": "Name",
                "dataIndex": "metadata.name",
                "width": 100
              },
              {
                "key": "namespace",
                "title": "Namespace",
                "dataIndex": "metadata.namespace",
                "width": 200
              },
              {
                "key": "age",
                "title": "Age",
                "dataIndex": "metadata.creationTimestamp",
                "width": 100
              }
            ],
            "namespace": "",
            "fieldSelector": ""
          },
          "traits": [
            {
              "type": "core/v1/slot",
              "properties": {
                "container": {
                  "id": "stack4",
                  "slot": "content"
                }
              }
            },
            {
              "type": "core/v1/style",
              "properties": {
                "styles": []
              }
            },
            {
              "type": "core/v1/event",
              "properties": {
                "handlers": [
                  {
                    "type": "onActive",
                    "componentId": "unstructured_sidebar3",
                    "method": {
                      "name": "setVisible",
                      "parameters": {
                        "visible": true
                      }
                    },
                    "disabled": false,
                    "wait": {
                      "type": "delay",
                      "time": 0
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  },
  "modules": []
}